soup_sources = [
  'soup-address.c',
  'soup-auth.c',
  'soup-auth-basic.c',
  'soup-auth-digest.c',
  'soup-auth-ntlm.c',
  'soup-auth-negotiate.c',
  'soup-auth-domain.c',
  'soup-auth-domain-basic.c',
  'soup-auth-domain-digest.c',
  'soup-auth-manager.c',
  'soup-body-input-stream.c',
  'soup-body-output-stream.c',
  'soup-cache.c',
  'soup-cache-client-input-stream.c',
  'soup-cache-input-stream.c',
  'soup-client-input-stream.c',
  'soup-connection.c',
  'soup-connection-auth.c',
  'soup-content-decoder.c',
  'soup-content-processor.c',
  'soup-content-sniffer.c',
  'soup-content-sniffer-stream.c',
  'soup-converter-wrapper.c',
  'soup-cookie.c',
  'soup-cookie-jar.c',
  'soup-cookie-jar-db.c',
  'soup-cookie-jar-text.c',
  'soup-date.c',
  'soup-directory-input-stream.c',
  'soup-filter-input-stream.c',
  'soup-form.c',
  'soup-headers.c',
  'soup-init.c',
  'soup-io-stream.c',
  'soup-logger.c',
  'soup-message.c',
  'soup-message-body.c',
  'soup-message-client-io.c',
  'soup-message-headers.c',
  'soup-message-io.c',
  'soup-message-queue.c',
  'soup-message-server-io.c',
  'soup-method.c',
  'soup-misc.c',
  'soup-multipart.c',
  'soup-multipart-input-stream.c',
  'soup-password-manager.c',
  'soup-path-map.c',
  'soup-proxy-resolver.c',
  'soup-proxy-resolver-default.c',
  'soup-proxy-resolver-wrapper.c',
  'soup-proxy-uri-resolver.c',
  'soup-request.c',
  'soup-request-data.c',
  'soup-request-file.c',
  'soup-request-http.c',
  'soup-requester.c',
  'soup-server.c',
  'soup-session.c',
  'soup-session-async.c',
  'soup-session-feature.c',
  'soup-session-sync.c',
  'soup-socket.c',
  'soup-socket-properties.c',
  'soup-status.c',
  'soup-tld.c',
  'soup-uri.c',
  'soup-value-utils.c',
  'soup-version.c',
  'soup-websocket.c',
  'soup-websocket-connection.c',
  'soup-xmlrpc.c',
  'soup-xmlrpc-old.c',
]

soup_headers = [
  'soup.h',
  'soup-address.h',
  'soup-auth.h',
  'soup-auth-domain.h',
  'soup-auth-domain-basic.h',
  'soup-auth-domain-digest.h',
  'soup-auth-manager.h',
  'soup-autocleanups.h',
  'soup-cache.h',
  'soup-content-decoder.h',
  'soup-content-sniffer.h',
  'soup-cookie.h',
  'soup-cookie-jar.h',
  'soup-cookie-jar-db.h',
  'soup-cookie-jar-text.h',
  'soup-date.h',
  'soup-form.h',
  'soup-headers.h',
  'soup-logger.h',
  'soup-message.h',
  'soup-message-body.h',
  'soup-message-headers.h',
  'soup-method.h',
  'soup-misc.h',
  'soup-multipart.h',
  'soup-multipart-input-stream.h',
  'soup-password-manager.h',
  'soup-portability.h',
  'soup-proxy-resolver.h',
  'soup-proxy-resolver-default.h',
  'soup-proxy-uri-resolver.h',
  'soup-request.h',
  'soup-request-data.h',
  'soup-request-file.h',
  'soup-request-http.h',
  'soup-requester.h',
  'soup-server.h',
  'soup-session.h',
  'soup-session-async.h',
  'soup-session-feature.h',
  'soup-session-sync.h',
  'soup-socket.h',
  'soup-status.h',
  'soup-tld.h',
  'soup-types.h',
  'soup-uri.h',
  'soup-value-utils.h',
  'soup-websocket.h',
  'soup-websocket-connection.h',
  'soup-xmlrpc.h',
  'soup-xmlrpc-old.h',
]

includedir = 'libsoup-@0@/libsoup'.format(apiversion)
install_headers(soup_headers, subdir : includedir)

version_cdata = configuration_data()
version_cdata.set('SOUP_MAJOR_VERSION', soup_version_major)
version_cdata.set('SOUP_MINOR_VERSION', soup_version_minor)
version_cdata.set('SOUP_MICRO_VERSION', soup_version_micro)

configure_file(input : 'soup-version.h.in',
  output : 'soup-version.h',
  install_dir : join_paths(get_option('includedir'), includedir),
  configuration : version_cdata)

soup_enums = gnome.mkenums('soup-enum-types',
  sources : soup_headers,
  h_template : 'soup-enum-types.h.template',
  c_template : 'soup-enum-types.c.template',
  install_header : true,
  install_dir : join_paths(get_option('includedir'), includedir))

soupenum_h = soup_enums[1]
soupenum_c = soup_enums[0]

tldparser = find_program(join_paths(meson.current_source_dir(), 'tld-parser.py'))
tlddata = custom_target('tlddata',
  output : 'tld_data.inc',
  input : join_paths(meson.source_root(), 'data', 'effective_tld_names.dat'),
  install : false,
  command : [tldparser, '@INPUT@', '@OUTPUT@'])

libsoup_c_args  = ['-DHAVE_CONFIG_H']
libsoup_c_args += ['-DG_LOG_DOMAIN="libsoup"']
libsoup_c_args += ['-DLIBSOUP_COMPILATION']

libsoup = library('soup-@0@'.format(apiversion), soup_sources,
    soupenum_h, soupenum_c, tlddata,
    version : libversion,
    soversion : soversion,
    c_args : libsoup_c_args,
    include_directories : [configinc],
    install : true,
    dependencies : [glib_dep, libxml_dep, sqlite_dep, platform_deps]
  )

libsoup_dep = declare_dependency(link_with : libsoup,
    include_directories : configinc)
